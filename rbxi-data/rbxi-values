#!/bin/bash
########################################################################
####  Script Name: rbxi-values
####  Version: 2.1.0
####  Date: 19 December 2008
########################################################################

########################################################################
#### RSYNC/RDIFF-BACKUP DATA ###########################################
########################################################################
# set to either rdiff-backup or rsync. Can be overridden with -o [rm/rs] optionn
BACKUP_APP='rsync'

# change these to the true system paths if you are going to run this as a cron job
# like so: RDIFF_PATH='/usr/bin/rdiff-backup'
# Use'which rdiff-backup' OR 'which rsync' (no quotes) to find the true path.
RDIFF_PATH='rdiff-backup'
RSYNC_PATH='rsync'

# for remote, via ssh, include the ssh option
# ie: RSYNC_EXTRA_OPTIONS=' --rsh=ssh'
# RSYNC_EXTRA_OPTIONS=' --dry-run -v ' # for verbose, testing only, no actual backup
# only set if it's a remote machine, otherwise make null: RSYNC_EXTRA_OPTIONS=''
RSYNC_EXTRA_OPTIONS='  -v --stats '
RDIFF_EXTRA_OPTIONS=' --terminal-verbosity 5 '

# see man rdiff-backup for proper syntax for time. This is set to remove older
# than 60 days incremental backupsThe time  interval  is  an integer followed
# by the character s, m, h, D, W, M, or Y, indicating seconds, minutes, hours, days,
# weeks, months, or years respectively, or a number of these concatenated.
# For example, 32m  means  32  minutes; 3W2D10h7s  means 3 weeks, 2 days, 10 hours, and 7 seconds.
RDIFF_REMOVE_TIME='60D'

########################################################################
#### BACKUP DIRECTORY PATHS AND INFORMATION ############################
########################################################################
#    << CHANGE TO YOUR BACKUP LOCATION PATHS >>
#
# Primary backup directory on partition or external drive
# set to your backup partition path
# REMEMBER, DO NOT BACKUP THE BACKUP DIRECTORY, BLOCK IT IN THE EXCLUDE FILE LIST
# DO NOT END the destination directory names below with a '/'
# DO START them with a '/'
# primary rdiff-backup directory (sample)
BACKUP_DIRECTORY='/media/esata'
BACKUP_DIRECTORY_1=''
BACKUP_DIRECTORY_2=''
BACKUP_DIRECTORY_3=''
BACKUP_DIRECTORY_4=''
BACKUP_DIRECTORY_5=''
BACKUP_DIRECTORY_6=''
BACKUP_DIRECTORY_7=''
BACKUP_DIRECTORY_8=''
BACKUP_DIRECTORY_9=''
BACKUP_DIRECTORY_10=''

# set rsync backup directory separately
# primary rdiff-backup directory (sample):
BACKUP_DIRECTORY_RS='/media/esata'
BACKUP_DIRECTORY_1_RS=''
BACKUP_DIRECTORY_2_RS=''
BACKUP_DIRECTORY_3_RS=''
BACKUP_DIRECTORY_4_RS=''
BACKUP_DIRECTORY_5_RS=''
BACKUP_DIRECTORY_6_RS=''
BACKUP_DIRECTORY_7_RS=''
BACKUP_DIRECTORY_8_RS=''
BACKUP_DIRECTORY_9_RS=''
BACKUP_DIRECTORY_10_RS=''

# Primary backup job directories, these will be located inside of the BACKUP_DIRECTORY
# You do not need to create these primary backup directories, the script will do it.
# DO NOT END the destination directory names below with a '/'
# DO START them with a /
# rdiff-backup sub directory name (sample):):
BACKUP_SUB_DIR='/backup'
BACKUP_SUB_DIR_1=''
BACKUP_SUB_DIR_2=''
BACKUP_SUB_DIR_3=''
BACKUP_SUB_DIR_4=''
BACKUP_SUB_DIR_5=''
BACKUP_SUB_DIR_6=''
BACKUP_SUB_DIR_7=''
BACKUP_SUB_DIR_8=''
BACKUP_SUB_DIR_9=''
BACKUP_SUB_DIR_10=''

# rsync sub directory name (sample):
BACKUP_SUB_DIR_RS='/backup-rs'
BACKUP_SUB_DIR_1_RS=''
BACKUP_SUB_DIR_2_RS=''
BACKUP_SUB_DIR_3_RS=''
BACKUP_SUB_DIR_4_RS=''
BACKUP_SUB_DIR_5_RS=''
BACKUP_SUB_DIR_6_RS=''
BACKUP_SUB_DIR_7_RS=''
BACKUP_SUB_DIR_8_RS=''
BACKUP_SUB_DIR_9_RS=''
BACKUP_SUB_DIR_10_RS=''

########################################################################
#### SCRIPT BACKUP DESTINATION SUB DIRECTORIES #########################
########################################################################
# << CHANGE TO MEET YOUR NEEDS >>

# specific main backup subdirectory names, eg: /media/usbdisk/bu-2/home and so on
# NOTE: if either of these is left blank, the script will not back up that item unless
# you override it with a -C (clone) option, which also sets these to blank anyway, except home.
# You do not need to create the following subdirectories, rdiff-backup will create them
# automatically using the names you give here
HOME_DIR='home'
ROOT_DIR='root-hda1'

# these are optional backup subdirectories, if these are used the script will backup these
# as well as / and /home autumatically.
# Blank '' means the script does not try to back that item up
# This is the backup sub directory name, not the actual data file path
DATA_1_DIR=''
DATA_2_DIR=''
DATA_3_DIR=''
DATA_4_DIR=''
DATA_5_DIR=''
DATA_6_DIR=''
DATA_7_DIR=''
DATA_8_DIR=''
DATA_9_DIR=''
DATA_10_DIR=''

########################################################################
#### SCRIPT BACKUP DIRECTORY OUTPUT DESCRIPTIONS #######################
########################################################################
# << CHANGE TO YOUR PREFERRED OUTPUT TEXT FOR EXTRA DATA 1/2 BACKUPS >>
#
# these should match with the XXX_DIR above, and just define what output
# the script shows as it's backing up each directory.
DATA_1_DESC='' # for example: DATA_1_DESC='web'
DATA_2_DESC='' # for example: DATA_2_DESC='email'
DATA_3_DESC=''
DATA_4_DESC=''
DATA_5_DESC=''
DATA_6_DESC=''
DATA_7_DESC=''
DATA_8_DESC=''
DATA_9_DESC=''
DATA_10_DESC=''

# this is only for print output, it's not used in the actual backup
# << CHANGE TO YOUR ROOT PARTITION FULL PATH >>
ROOT_DESC='/dev/hda1'

########################################################################
#### SYSTEM BACKUP PATH INFORMATION  ###################################
########################################################################
# << CHANGE TO YOUR SYSTEM PATHS FOR HOME / + EXTRA BACKUP PATHS IF NEEDED >>

# These are the actual directory paths you want to backup, the SOURCE directories.
# Should not change these unless you are backing up an install from outside of it
# Note: if you leave off the ending /, rsync will create a directory of the last name in
# the path, which you probably don't want.
HOME_PATH='/home/'
ROOT_PATH='/'

# these two are optional extra backups, set to absolute path if you are using them
# Correspond to DATA_x, for example: /home/username/data
# This is the actual file path in your system
DATA_1_PATH=''
DATA_2_PATH=''
DATA_3_PATH=''
DATA_4_PATH=''
DATA_5_PATH=''
DATA_6_PATH=''
DATA_7_PATH=''
DATA_8_PATH=''
DATA_9_PATH=''
DATA_10_PATH=''

########################################################################
#### PARTITION MOUNT/UMOUNT ############################################
########################################################################
# << CHANGE TO FIT YOUR NEEDS >>
#
# Note that MOUNT/UNMOUNT 1-10 are triggered by the -M option
#
# if you are not going to be mounting/unmounting your backup partition / disk,
# then set value to blank:
# MOUNT_BU_DISK=''
# UNMOUNT_BU_DISK=''
# Note: you can use anything here, </dev/sdd1>; -L <disk label>; -U <disk uuid>
# replace <....> with your label,uuid, or /dev/...
# Syntax for label: mount -L <disklabel> $BACKUP_DIRECTORY
# Syntax for uuid: mount -U <uuid> $BACKUP_DIRECTORY
# Syntax for standard: mount </dev/sdd2> $BACKUP_DIRECTORY
#
# If you are using NFS mounted directories, the host nfs server must have these permissions set
# in /etc/exports: rw,async,,no_root_squash or write permissions will fail in rsync
#
# IMPORTANT: DO NOT USE " " quotes, because the $BACKUP_DIRECTORY will be evaluated later
# after the final BACKUP_DIRECTORY has been set in the script. Use '' to handle this!
# note: the proper rdiff/rsync directory will be assigned later by script
# For cron jobs, put the full system path to mount/umount here in the command.
# use 'which mount' OR 'which umount' (no quotes) to find the true path.
#
# EXCEPTION: if you want to use a custom DIRECTORY from above, do it like this:
# MOUNT_BU_DISK="mount -L backup-disk-1 $BACKUP_DIRECTORY_3"
# UNMOUNT_BU_DISK="umount $BACKUP_DIRECTORY_3"
# this will then use the directory you list. This requires double quotes, "", not single, ''
# of course you can also just hard code in the entire thing if you want, but it's easier to
# avoid errors if you just type it in time I find.
#
# If you are just needing to change the BACKUP_DIRECTORY, just use -B <bu directory number>
# instead and rbxi will change that automatically for you, but if you need to put actually
# different mount/umount information, then use an alternate MOUNT/UNMOUNT number
## DEFAULT MOUNT
MOUNT_BU_DISK='mount -L backup-disk-1 $BACKUP_DIRECTORY'
UNMOUNT_BU_DISK='umount $BACKUP_DIRECTORY'
## OPTIONAL MOUNT SET
MOUNT_BU_DISK_1=''
UNMOUNT_BU_DISK_1=''
MOUNT_BU_DISK_2=''
UNMOUNT_BU_DISK_2=''
MOUNT_BU_DISK_3=''
UNMOUNT_BU_DISK_3=''
MOUNT_BU_DISK_4=''
UNMOUNT_BU_DISK_4=''
MOUNT_BU_DISK_5=''
UNMOUNT_BU_DISK_5=''
MOUNT_BU_DISK_6=''
UNMOUNT_BU_DISK_6=''
MOUNT_BU_DISK_7=''
UNMOUNT_BU_DISK_7=''
MOUNT_BU_DISK_8=''
UNMOUNT_BU_DISK_8=''
MOUNT_BU_DISK_9=''
UNMOUNT_BU_DISK_9=''
MOUNT_BU_DISK_10=''
UNMOUNT_BU_DISK_10=''

########################################################################
#### JOB PRESETS #######################################################
########################################################################
# set with whatever arguments you want to start script with, script will restart with those
# options automatically, then run whatever job you set. Jobs consist of sets of rbxi options:
# sample: BACKUP_JOB_1=' -M 3 -S rh ' - this would use mount/umount 3, and skip home/root backup
# sample: BACKUP_JOB_2=' -M 2 -S rh -A 8' - this would use mount/umount 2, skip home/root backup
# and Add the normally turned off DATA_8
#
# This is triggered by the -J <1-10> option.
BACKUP_JOB_1=''
BACKUP_JOB_2=''
BACKUP_JOB_3=''
BACKUP_JOB_4=''
BACKUP_JOB_5=''
BACKUP_JOB_6=''
BACKUP_JOB_7=''
BACKUP_JOB_8=''
BACKUP_JOB_9=''
BACKUP_JOB_10=''

########################################################################
#### CLEAN / DELETE / BACKUP / SKIP ####################################
########################################################################
# these are for options, used in case of cron or option run backups/deletes
# if you want to hard set any option just set the variable to true.
# trigger rdiff/rsync cleeanup, either older than x, or remove deleted files
B_CLEAN_OLDER='false' # -c :clean old backup files, then do backup
B_DELETE_BACKUP='false' # -d :delete old backup, then do backup
B_DO_BACKUP='false' # -b :automatic backup

# skip home/root/data can be overridden by -A <r|h|number> when you are creating
# a separate job (-J <number>).
B_SKIP_DATA_FULL='false' # -C [..] or -S d - skips all data partition backups
B_SKIP_DATA_1='false' # -S 1
B_SKIP_DATA_2='false' # -S 2
B_SKIP_DATA_3='false' # -S 3
B_SKIP_DATA_4='false' # -S 4
B_SKIP_DATA_5='false' # -S 5
B_SKIP_DATA_6='false' # -S 6
B_SKIP_DATA_7='false' # -S 7
B_SKIP_DATA_8='false' # -S 8
B_SKIP_DATA_9='false' # -S 9
B_SKIP_DATA_10='false' # -S 10
B_SKIP_HOME='false' # -S h
B_SKIP_ROOT='false' # -S r

########################################################################
#### MISCELLANEOUS SCRIPT OPTIONS ######################################
########################################################################
# miscellaneous script booleans
B_SKIP_MOUNT='false' # -m :do not mount backup drive, or umount it
B_SPINNING_WHEEL='false' # -s :use spinning wheel option
B_TESTING_1='false' # -! 1 :testing flag 1
B_TESTING_2='false' # -! 2 :testing flag 2

# this is how fast the spinning wheel moves. Anything less than 0.5 not
# recommended due to performance problems on most machines.
# Lower number means wheel moves faster. Slower machine, change to 1
SLEEP_TIME_SPINNER='0.5'
# time between backup operations, make integer
SLEEP_TIME_BACKUP='3'
# time forced exit allows for disk write syncs before umount occurs
SLEEP_TIME_UMOUNT='5'

########################################################################
#### FINAL STEP - DO NOT SKIP! #########################################
########################################################################
# and last but not least, set this to 'true' once you are done. Failure to do this will make
# rbxi exit with errors, since you can't run it without having completed these user variables
B_VARIABLES_SET='false'

###**EOF**###
